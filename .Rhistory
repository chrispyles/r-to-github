library(tidyverse)
iris
knitr::opts_chunk$set(message=FALSE, warning=FALSE)
library(tidyverse)
iris
ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width)) +
geom_line() +
ggtitle(paste0("Sepal Width vs. Sepal Length, r = ", cor(iris$Sepal.Length, iris$Sepal.Width)))
ggplot(iris, aes(x = Sepal.Length, y = Petal.Length)) +
geom_line() +
ggtitle(paste0("Petal Length vs. Sepal Length, r = ", cor(iris$Sepal.Length, iris$Petal.Length)))
ggplot(iris, aes(x = Sepal.Length, y = Petal.Length)) +
geom_line() +
ggtitle(paste0("Petal Length vs. Sepal Length, r = ", cor(iris$Sepal.Length, iris$Petal.Length)))
source("utils/generate-menu.R")
source('~/GitHub/r-to-github/utils/export.R')
source('~/GitHub/r-to-github/utils/export.R')
source('~/GitHub/r-to-github/utils/export.R')
source('~/GitHub/r-to-github/utils/export.R')
source('~/GitHub/r-to-github/utils/export.R')
source('~/GitHub/r-to-github/utils/export.R')
plot(cars)
library(ggplot2)
restore = list(repr.plot.width=4, repr.plot.height=3.5)
options(restore)
hybrid = read.csv("hybrid.csv")
head(hybrid)
ggplot(hybrid) +
geom_point(aes(x=acceleration, y=msrp))
ggplot(hybrid) +
geom_point(aes(x=mpg, y=msrp))
ggplot(hybrid[hybrid$class == "SUV",]) +
geom_point(aes(x=mpg, y=msrp))
cor(hybrid$acceleration, hybrid$msrp)
mod = lm(msrp ~ acceleration, data=hybrid)
summary(mod)
ggplot(hybrid, aes(x=acceleration, y=msrp)) +
geom_point() +
geom_smooth(method="lm", level=0)
mod.2 = lm(msrp ~ acceleration + mpg, data = hybrid)
summary(mod.2)
age = read.csv("Implicit-Age_IAT.csv")
head(age)
heart = read.csv("Outcome-Heart-Attack-Mortality.csv")
head(heart)
joined_data = merge(age, heart, by="FIPS")
head(joined_data)
joined_data = joined_data[joined_data$Year == 2010,]
joined_data = joined_data[joined_data$State == "California",]
head(joined_data)
ggplot(joined_data, aes(x=D_biep_Young_Good_all, y=Heart_Attack_Mortality)) +
geom_point() +
geom_smooth(method="lm", level=0)
cor(joined_data$D_biep_Young_Good_all, joined_data$Heart_Attack_Mortality)
mod.3 = lm(Heart_Attack_Mortality ~ D_biep_Young_Good_all, data=joined_data)
summary(mod.3)
